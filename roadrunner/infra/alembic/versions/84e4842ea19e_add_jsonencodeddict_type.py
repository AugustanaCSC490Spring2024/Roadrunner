"""Add JSONEncodedDict type

Revision ID: 84e4842ea19e
Revises: 
Create Date: 2024-05-09 11:02:49.601416

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import context, op

from roadrunner.infra.db.models import JSONEncodedDict

# revision identifiers, used by Alembic.
revision: str = "84e4842ea19e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    engine = context.get_bind()

    # Check if table exists before creating
    if not engine.dialect.has_table(engine, "embeddings"):
        op.create_table(
            "embeddings",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("vector", sa.PickleType(), nullable=False),
            sa.Column("text", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
        )
    if not engine.dialect.has_table(engine, "users"):
        op.create_table(
            "users",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("username", sa.String(), nullable=False),
            sa.Column("email", sa.String(), nullable=False),
            sa.Column("hashed_password", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("email"),
            sa.UniqueConstraint("username"),
            checkfirst=True,
        )
    if not engine.dialect.has_table(engine, "captures"):
        op.create_table(
            "captures",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("user_id", sa.Integer(), nullable=False),
            sa.Column("transcript", sa.String(), nullable=False),
            sa.Column("summary", sa.String(), nullable=True),
            sa.Column("created_at", sa.DateTime(), nullable=True),
            sa.Column("embeddings", sa.JSON(), nullable=True),
            sa.ForeignKeyConstraint(
                ["user_id"],
                ["users.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            checkfirst=True,
        )
    if not engine.dialect.has_table(engine, "conversations"):
        op.create_table(
            "conversations",
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
            sa.Column("user_id", sa.Integer(), nullable=False),
            sa.Column("created_at", sa.DateTime(), nullable=True),
            sa.Column("context", JSONEncodedDict(), nullable=False),
            sa.ForeignKeyConstraint(
                ["user_id"],
                ["users.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("conversations")
    op.drop_table("captures")
    op.drop_table("users")
    op.drop_table("embeddings")
    # ### end Alembic commands ###
